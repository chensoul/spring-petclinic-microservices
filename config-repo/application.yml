server:
  # make sure requests the proxy uri instead of the server one
  forward-headers-strategy: framework
  shutdown: graceful
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json,image/svg+xml
    min-response-size: 1024

# embedded database init, supports mysql too trough the 'mysql' spring profile
spring:
  sql:
    init:
      schema-locations: classpath*:db/hsqldb/schema.sql
      data-locations: classpath*:db/hsqldb/data.sql
  cloud:
    config:
      # Allow the microservices to override the remote properties with their own System properties or config file
      allow-override: true
      # Override configuration with any local property source
      override-none: true
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none

# Logging
logging.file.name: logs/${spring.application.name}/all.log

# Metrics
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
management.tracing.sampling.probability: 1.0

loki.url: http://localhost:3100/loki/api/v1/push

# Chaos Engineering
---
spring.config.activate.on-profile: chaos-monkey

management.endpoint.chaosmonkey.enabled: true

chaos:
  monkey:
    enabled: true
    watcher:
      component: false
      controller: false
      repository: false
      rest-controller: false
      service: false

---
spring.config.activate.on-profile: mysql

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/petclinic?useSSL=false
    username: root
    password: petclinic
  sql:
    init:
      schema-locations: classpath*:db/mysql/schema.sql
      data-locations: classpath*:db/mysql/data.sql
      init: ALWAYS
