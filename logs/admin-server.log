2024-10-16T08:58:33.019+08:00  INFO 56038 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : Starting SpringBootAdminApplication using Java 23 with PID 56038 (/Users/chensoul/codes/github/spring-petclinic-microservices/spring-petclinic-admin-server/target/classes started by chensoul in /Users/chensoul/codes/github/spring-petclinic-microservices)
2024-10-16T08:58:33.020+08:00  INFO 56038 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : No active profile set, falling back to 1 default profile: "default"
2024-10-16T08:58:33.042+08:00  INFO 56038 --- [admin-server] [main] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888/
2024-10-16T08:58:33.042+08:00  INFO 56038 --- [admin-server] [main] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=admin-server, profiles=[default], label=null, version=null, state=null
2024-10-16T08:58:33.686+08:00  INFO 56038 --- [admin-server] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=71214f28-de3b-3e12-b969-5dfa5eeb5f3e
2024-10-16T08:58:33.713+08:00  WARN 56038 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-10-16T08:58:33.714+08:00  WARN 56038 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T08:58:33.715+08:00  WARN 56038 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-10-16T08:58:33.716+08:00  WARN 56038 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T08:58:33.717+08:00  WARN 56038 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T08:58:33.964+08:00  WARN 56038 --- [admin-server] [main] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-10-16T08:58:34.148+08:00  INFO 56038 --- [admin-server] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 18 endpoints beneath base path '/actuator'
2024-10-16T08:58:34.293+08:00  INFO 56038 --- [admin-server] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-10-16T08:58:34.390+08:00  WARN 56038 --- [admin-server] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-10-16T08:58:34.430+08:00  INFO 56038 --- [admin-server] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-10-16T08:58:34.441+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-10-16T08:58:34.443+08:00  INFO 56038 --- [admin-server] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-10-16T08:58:34.446+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-10-16T08:58:34.602+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-10-16T08:58:34.603+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-10-16T08:58:34.604+08:00  INFO 56038 --- [admin-server] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-10-16T08:58:34.604+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1729040314604 with initial instances count: 2
2024-10-16T08:58:34.606+08:00  INFO 56038 --- [admin-server] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application ADMIN-SERVER with eureka with status UP
2024-10-16T08:58:34.606+08:00  INFO 56038 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1729040314606, current=UP, previous=STARTING]
2024-10-16T08:58:34.607+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090: registering service...
2024-10-16T08:58:34.626+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090 - registration status: 204
2024-10-16T08:58:34.689+08:00 ERROR 56038 --- [admin-server] [main] i.n.r.d.DnsServerAddressStreamProviders  : Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2024-10-16T08:58:34.733+08:00  INFO 56038 --- [admin-server] [main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8090 (http)
2024-10-16T08:58:34.734+08:00  INFO 56038 --- [admin-server] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8090
2024-10-16T08:58:34.746+08:00  INFO 56038 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : Started SpringBootAdminApplication in 2.402 seconds (process running for 3.008)
2024-10-16T09:03:34.449+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:04:54.312+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-6] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=3742f1475178, version=3, registration=Registration(name=API-GATEWAY, managementUrl=http://192.168.2.112:8080/actuator, healthUrl=http://192.168.2.112:8080/actuator/health, serviceUrl=http://192.168.2.112:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T00:58:34.792442Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-api-gateway, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-api-gateway, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.api}}), endpoints=Endpoints(endpoints={ratelimiterevents=Endpoint(id=ratelimiterevents, url=http://192.168.2.112:8080/actuator/ratelimiterevents), caches=Endpoint(id=caches, url=http://192.168.2.112:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:8080/actuator/loggers), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:8080/actuator/heapdump), streamcircuitbreakerevents=Endpoint(id=streamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/streamcircuitbreakerevents), circuitbreakers=Endpoint(id=circuitbreakers, url=http://192.168.2.112:8080/actuator/circuitbreakers), features=Endpoint(id=features, url=http://192.168.2.112:8080/actuator/features), hystrixstreamcircuitbreakerevents=Endpoint(id=hystrixstreamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/hystrixstreamcircuitbreakerevents), timelimiterevents=Endpoint(id=timelimiterevents, url=http://192.168.2.112:8080/actuator/timelimiterevents), beans=Endpoint(id=beans, url=http://192.168.2.112:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:8080/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:8080/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:8080/actuator/prometheus), ratelimiters=Endpoint(id=ratelimiters, url=http://192.168.2.112:8080/actuator/ratelimiters), info=Endpoint(id=info, url=http://192.168.2.112:8080/actuator/info), timelimiters=Endpoint(id=timelimiters, url=http://192.168.2.112:8080/actuator/timelimiters), circuitbreakerevents=Endpoint(id=circuitbreakerevents, url=http://192.168.2.112:8080/actuator/circuitbreakerevents), logfile=Endpoint(id=logfile, url=http://192.168.2.112:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:8080/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:8080/actuator/serviceregistry), retries=Endpoint(id=retries, url=http://192.168.2.112:8080/actuator/retries), retryevents=Endpoint(id=retryevents, url=http://192.168.2.112:8080/actuator/retryevents), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:8080/actuator/mappings), bulkheadevents=Endpoint(id=bulkheadevents, url=http://192.168.2.112:8080/actuator/bulkheadevents), metrics=Endpoint(id=metrics, url=http://192.168.2.112:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:8080/actuator/conditions), bulkheads=Endpoint(id=bulkheads, url=http://192.168.2.112:8080/actuator/bulkheads)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:8080
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:8080
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:08:34.451+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:13:14.287+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-8] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=3742f1475178, version=5, registration=Registration(name=API-GATEWAY, managementUrl=http://192.168.2.112:8080/actuator, healthUrl=http://192.168.2.112:8080/actuator/health, serviceUrl=http://192.168.2.112:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T01:05:14.482354Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-api-gateway, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-api-gateway, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.api}}), endpoints=Endpoints(endpoints={ratelimiterevents=Endpoint(id=ratelimiterevents, url=http://192.168.2.112:8080/actuator/ratelimiterevents), caches=Endpoint(id=caches, url=http://192.168.2.112:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:8080/actuator/loggers), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:8080/actuator/heapdump), streamcircuitbreakerevents=Endpoint(id=streamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/streamcircuitbreakerevents), circuitbreakers=Endpoint(id=circuitbreakers, url=http://192.168.2.112:8080/actuator/circuitbreakers), features=Endpoint(id=features, url=http://192.168.2.112:8080/actuator/features), hystrixstreamcircuitbreakerevents=Endpoint(id=hystrixstreamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/hystrixstreamcircuitbreakerevents), timelimiterevents=Endpoint(id=timelimiterevents, url=http://192.168.2.112:8080/actuator/timelimiterevents), beans=Endpoint(id=beans, url=http://192.168.2.112:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:8080/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:8080/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:8080/actuator/prometheus), ratelimiters=Endpoint(id=ratelimiters, url=http://192.168.2.112:8080/actuator/ratelimiters), info=Endpoint(id=info, url=http://192.168.2.112:8080/actuator/info), timelimiters=Endpoint(id=timelimiters, url=http://192.168.2.112:8080/actuator/timelimiters), circuitbreakerevents=Endpoint(id=circuitbreakerevents, url=http://192.168.2.112:8080/actuator/circuitbreakerevents), logfile=Endpoint(id=logfile, url=http://192.168.2.112:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:8080/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:8080/actuator/serviceregistry), retries=Endpoint(id=retries, url=http://192.168.2.112:8080/actuator/retries), retryevents=Endpoint(id=retryevents, url=http://192.168.2.112:8080/actuator/retryevents), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:8080/actuator/mappings), bulkheadevents=Endpoint(id=bulkheadevents, url=http://192.168.2.112:8080/actuator/bulkheadevents), metrics=Endpoint(id=metrics, url=http://192.168.2.112:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:8080/actuator/conditions), bulkheads=Endpoint(id=bulkheads, url=http://192.168.2.112:8080/actuator/bulkheads)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:8080
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:8080
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:13:34.449+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:18:34.444+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:20:05.121+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance 'a9d033cd7eb4' missing in DiscoveryClient services and will be removed.
2024-10-16T09:22:35.173+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090 - Re-registering apps/ADMIN-SERVER
2024-10-16T09:22:35.175+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090: registering service...
2024-10-16T09:22:35.189+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090 - registration status: 204
2024-10-16T09:22:35.208+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance '8077f2021173' missing in DiscoveryClient services and will be removed.
2024-10-16T09:22:35.209+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance 'cf679d40de0f' missing in DiscoveryClient services and will be removed.
2024-10-16T09:22:35.210+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance '54b11f9c92aa' missing in DiscoveryClient services and will be removed.
2024-10-16T09:22:35.210+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance '3742f1475178' missing in DiscoveryClient services and will be removed.
2024-10-16T09:23:34.442+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:27:24.259+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-7] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cf679d40de0f, version=8, registration=Registration(name=VISITS-SERVICE, managementUrl=http://192.168.2.112:64783/actuator, healthUrl=http://192.168.2.112:64783/actuator/health, serviceUrl=http://192.168.2.112:64783, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T01:23:05.261631Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-visits-service, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-visits-service, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.visits}}), endpoints=Endpoints(endpoints={caches=Endpoint(id=caches, url=http://192.168.2.112:64783/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:64783/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.2.112:64783/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:64783/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:64783/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:64783/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:64783/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:64783/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.2.112:64783/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:64783/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:64783/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.2.112:64783/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:64783/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:64783/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:64783/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:64783/actuator/prometheus), metrics=Endpoint(id=metrics, url=http://192.168.2.112:64783/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:64783/actuator/conditions), info=Endpoint(id=info, url=http://192.168.2.112:64783/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.2.112:64783/actuator/jolokia)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:64783
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:64783
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:27:34.268+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-8] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=e0d8e91774e5, version=3, registration=Registration(name=VETS-SERVICE, managementUrl=http://192.168.2.112:64768/actuator, healthUrl=http://192.168.2.112:64768/actuator/health, serviceUrl=http://192.168.2.112:64768, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T01:03:34.840909Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-vets-service, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-vets-service, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.vets}}), endpoints=Endpoints(endpoints={caches=Endpoint(id=caches, url=http://192.168.2.112:64768/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:64768/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.2.112:64768/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:64768/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:64768/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:64768/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:64768/actuator/serviceregistry), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:64768/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.2.112:64768/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:64768/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:64768/actuator/mappings), beans=Endpoint(id=beans, url=http://192.168.2.112:64768/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:64768/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:64768/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:64768/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:64768/actuator/prometheus), metrics=Endpoint(id=metrics, url=http://192.168.2.112:64768/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:64768/actuator/conditions), info=Endpoint(id=info, url=http://192.168.2.112:64768/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.2.112:64768/actuator/jolokia)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:64768
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:64768
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:27:35.375+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance 'cf679d40de0f' missing in DiscoveryClient services and will be removed.
2024-10-16T09:27:35.375+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance '54b11f9c92aa' missing in DiscoveryClient services and will be removed.
2024-10-16T09:27:35.376+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance 'e0d8e91774e5' missing in DiscoveryClient services and will be removed.
2024-10-16T09:28:34.445+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:33:34.444+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:36:44.254+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=3742f1475178, version=12, registration=Registration(name=API-GATEWAY, managementUrl=http://192.168.2.112:8080/actuator, healthUrl=http://192.168.2.112:8080/actuator/health, serviceUrl=http://192.168.2.112:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T01:23:05.279469Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-api-gateway, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-api-gateway, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.api}}), endpoints=Endpoints(endpoints={ratelimiterevents=Endpoint(id=ratelimiterevents, url=http://192.168.2.112:8080/actuator/ratelimiterevents), caches=Endpoint(id=caches, url=http://192.168.2.112:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:8080/actuator/loggers), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:8080/actuator/heapdump), streamcircuitbreakerevents=Endpoint(id=streamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/streamcircuitbreakerevents), circuitbreakers=Endpoint(id=circuitbreakers, url=http://192.168.2.112:8080/actuator/circuitbreakers), features=Endpoint(id=features, url=http://192.168.2.112:8080/actuator/features), hystrixstreamcircuitbreakerevents=Endpoint(id=hystrixstreamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/hystrixstreamcircuitbreakerevents), timelimiterevents=Endpoint(id=timelimiterevents, url=http://192.168.2.112:8080/actuator/timelimiterevents), beans=Endpoint(id=beans, url=http://192.168.2.112:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:8080/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:8080/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:8080/actuator/prometheus), ratelimiters=Endpoint(id=ratelimiters, url=http://192.168.2.112:8080/actuator/ratelimiters), info=Endpoint(id=info, url=http://192.168.2.112:8080/actuator/info), timelimiters=Endpoint(id=timelimiters, url=http://192.168.2.112:8080/actuator/timelimiters), circuitbreakerevents=Endpoint(id=circuitbreakerevents, url=http://192.168.2.112:8080/actuator/circuitbreakerevents), logfile=Endpoint(id=logfile, url=http://192.168.2.112:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:8080/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:8080/actuator/serviceregistry), retries=Endpoint(id=retries, url=http://192.168.2.112:8080/actuator/retries), retryevents=Endpoint(id=retryevents, url=http://192.168.2.112:8080/actuator/retryevents), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:8080/actuator/mappings), bulkheadevents=Endpoint(id=bulkheadevents, url=http://192.168.2.112:8080/actuator/bulkheadevents), metrics=Endpoint(id=metrics, url=http://192.168.2.112:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:8080/actuator/conditions), bulkheads=Endpoint(id=bulkheads, url=http://192.168.2.112:8080/actuator/bulkheads)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:8080
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:8080
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:37:05.577+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-CacheRefreshExecutor-%d] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance '3742f1475178' missing in DiscoveryClient services and will be removed.
2024-10-16T09:38:34.446+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:43:34.445+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:46:44.243+08:00  INFO 56038 --- [admin-server] [reactor-http-nio-8] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=3742f1475178, version=18, registration=Registration(name=API-GATEWAY, managementUrl=http://192.168.2.112:8080/actuator, healthUrl=http://192.168.2.112:8080/actuator/health, serviceUrl=http://192.168.2.112:8080, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={}), statusTimestamp=2024-10-16T01:46:05.908752Z, info=Info(values={git={branch=main, commit={id=2a5d6e3, time=2024-10-11T09:43:34Z}}, build={artifact=spring-petclinic-api-gateway, encoding={reporting=UTF-8, source=UTF-8}, java={version=17}, name=spring-petclinic-api-gateway, time=2024-10-15T23:06:33.978Z, version=3.3.4, group=org.springframework.samples.petclinic.api}}), endpoints=Endpoints(endpoints={ratelimiterevents=Endpoint(id=ratelimiterevents, url=http://192.168.2.112:8080/actuator/ratelimiterevents), caches=Endpoint(id=caches, url=http://192.168.2.112:8080/actuator/caches), loggers=Endpoint(id=loggers, url=http://192.168.2.112:8080/actuator/loggers), heapdump=Endpoint(id=heapdump, url=http://192.168.2.112:8080/actuator/heapdump), streamcircuitbreakerevents=Endpoint(id=streamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/streamcircuitbreakerevents), circuitbreakers=Endpoint(id=circuitbreakers, url=http://192.168.2.112:8080/actuator/circuitbreakers), features=Endpoint(id=features, url=http://192.168.2.112:8080/actuator/features), hystrixstreamcircuitbreakerevents=Endpoint(id=hystrixstreamcircuitbreakerevents, url=http://192.168.2.112:8080/actuator/hystrixstreamcircuitbreakerevents), timelimiterevents=Endpoint(id=timelimiterevents, url=http://192.168.2.112:8080/actuator/timelimiterevents), beans=Endpoint(id=beans, url=http://192.168.2.112:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.2.112:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.2.112:8080/actuator/threaddump), sbom=Endpoint(id=sbom, url=http://192.168.2.112:8080/actuator/sbom), prometheus=Endpoint(id=prometheus, url=http://192.168.2.112:8080/actuator/prometheus), ratelimiters=Endpoint(id=ratelimiters, url=http://192.168.2.112:8080/actuator/ratelimiters), info=Endpoint(id=info, url=http://192.168.2.112:8080/actuator/info), timelimiters=Endpoint(id=timelimiters, url=http://192.168.2.112:8080/actuator/timelimiters), circuitbreakerevents=Endpoint(id=circuitbreakerevents, url=http://192.168.2.112:8080/actuator/circuitbreakerevents), logfile=Endpoint(id=logfile, url=http://192.168.2.112:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.2.112:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.2.112:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.2.112:8080/actuator/env), serviceregistry=Endpoint(id=serviceregistry, url=http://192.168.2.112:8080/actuator/serviceregistry), retries=Endpoint(id=retries, url=http://192.168.2.112:8080/actuator/retries), retryevents=Endpoint(id=retryevents, url=http://192.168.2.112:8080/actuator/retryevents), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.2.112:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.2.112:8080/actuator/mappings), bulkheadevents=Endpoint(id=bulkheadevents, url=http://192.168.2.112:8080/actuator/bulkheadevents), metrics=Endpoint(id=metrics, url=http://192.168.2.112:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.2.112:8080/actuator/conditions), bulkheads=Endpoint(id=bulkheads, url=http://192.168.2.112:8080/actuator/bulkheads)}), buildVersion=3.3.4, tags=Tags(values={}))

org.springframework.web.reactive.function.client.WebClientRequestException: Connection refused: /192.168.2.112:8080
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET health [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:480)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:522)
		at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:261)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: /192.168.2.112:8080
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:48:34.326+08:00  INFO 56038 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T09:49:27.413+08:00  INFO 56038 --- [admin-server] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application ADMIN-SERVER with eureka with status DOWN
2024-10-16T09:49:27.414+08:00  INFO 56038 --- [admin-server] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1729043367414, current=DOWN, previous=UP]
2024-10-16T09:49:27.415+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090: registering service...
2024-10-16T09:49:27.418+08:00  INFO 56038 --- [admin-server] [SpringApplicationShutdownHook] o.s.b.w.embedded.netty.GracefulShutdown  : Commencing graceful shutdown. Waiting for active requests to complete
2024-10-16T09:49:27.432+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2024-10-16T09:49:27.432+08:00  WARN 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2024-10-16T09:49:27.436+08:00  INFO 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2024-10-16T09:49:27.436+08:00  WARN 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMIN-SERVER": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2024-10-16T09:49:27.436+08:00  WARN 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T09:49:27.436+08:00  WARN 56038 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)

2024-10-16T10:01:44.723+08:00  INFO 64813 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : Starting SpringBootAdminApplication using Java 23 with PID 64813 (/Users/chensoul/codes/github/spring-petclinic-microservices/spring-petclinic-admin-server/target/classes started by chensoul in /Users/chensoul/codes/github/spring-petclinic-microservices)
2024-10-16T10:01:44.724+08:00  INFO 64813 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : No active profile set, falling back to 1 default profile: "default"
2024-10-16T10:01:44.746+08:00  INFO 64813 --- [admin-server] [main] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://localhost:8888/
2024-10-16T10:01:44.746+08:00  INFO 64813 --- [admin-server] [main] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=admin-server, profiles=[default], label=null, version=null, state=null
2024-10-16T10:01:45.242+08:00  INFO 64813 --- [admin-server] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=71214f28-de3b-3e12-b969-5dfa5eeb5f3e
2024-10-16T10:01:45.267+08:00  WARN 64813 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-10-16T10:01:45.268+08:00  WARN 64813 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T10:01:45.269+08:00  WARN 64813 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-10-16T10:01:45.270+08:00  WARN 64813 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T10:01:45.270+08:00  WARN 64813 --- [admin-server] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-10-16T10:01:45.503+08:00  WARN 64813 --- [admin-server] [main] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-10-16T10:01:45.681+08:00  INFO 64813 --- [admin-server] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 18 endpoints beneath base path '/actuator'
2024-10-16T10:01:45.818+08:00  INFO 64813 --- [admin-server] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-10-16T10:01:45.915+08:00  WARN 64813 --- [admin-server] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-10-16T10:01:45.953+08:00  INFO 64813 --- [admin-server] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-10-16T10:01:45.963+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-10-16T10:01:45.965+08:00  INFO 64813 --- [admin-server] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-10-16T10:01:45.969+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-10-16T10:01:46.104+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-10-16T10:01:46.105+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-10-16T10:01:46.106+08:00  INFO 64813 --- [admin-server] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-10-16T10:01:46.107+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1729044106107 with initial instances count: 2
2024-10-16T10:01:46.108+08:00  INFO 64813 --- [admin-server] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application ADMIN-SERVER with eureka with status UP
2024-10-16T10:01:46.109+08:00  INFO 64813 --- [admin-server] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1729044106109, current=UP, previous=STARTING]
2024-10-16T10:01:46.109+08:00  INFO 64813 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090: registering service...
2024-10-16T10:01:46.128+08:00  INFO 64813 --- [admin-server] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/192.168.2.112:admin-server:8090 - registration status: 204
2024-10-16T10:01:46.183+08:00 ERROR 64813 --- [admin-server] [main] i.n.r.d.DnsServerAddressStreamProviders  : Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2024-10-16T10:01:46.232+08:00  INFO 64813 --- [admin-server] [main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8090 (http)
2024-10-16T10:01:46.233+08:00  INFO 64813 --- [admin-server] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8090
2024-10-16T10:01:46.247+08:00  INFO 64813 --- [admin-server] [main] o.s.s.p.a.SpringBootAdminApplication     : Started SpringBootAdminApplication in 1.997 seconds (process running for 2.414)
2024-10-16T10:06:45.981+08:00  INFO 64813 --- [admin-server] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
